{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Documenta\u00e7\u00e3o do Nome do Projeto Mkdocs Material Apenas Markdown e o Mkdocs Material."},{"location":"API/Conta/","title":"Conta","text":""},{"location":"API/Conta/#project.conta.Conta","title":"<code>Conta</code>","text":"<p>Classe que representa uma Conta Banc\u00e1ria.</p> <p>Attributes:</p> Name Type Description <code>titular</code> <code>str</code> <p>Nome do titular da conta.</p> <code>saldo</code> <code>float</code> <p>Saldo atual da conta.</p> <code>cpf</code> <code>str</code> <p>CPF do titular.</p> <code>endereco</code> <code>str</code> <p>Endere\u00e7o do titular.</p> <code>telefone</code> <code>str</code> <p>N\u00famero de telefone do titular.</p> <code>agencia</code> <code>str</code> <p>N\u00famero da ag\u00eancia banc\u00e1ria.</p> <code>numero_conta</code> <code>str</code> <p>N\u00famero da conta banc\u00e1ria.</p> <code>tipo_conta</code> <code>str</code> <p>Tipo da conta (por exemplo, poupan\u00e7a ou corrente).</p> <code>data_abertura</code> <code>str</code> <p>Data de abertura da conta.</p> <code>ativa</code> <code>bool</code> <p>Indica se a conta est\u00e1 ativa ou n\u00e3o.</p> Source code in <code>project/conta.py</code> Python<pre><code>class Conta:\n\"\"\"\n    Classe que representa uma Conta Banc\u00e1ria.\n    Attributes:\n        titular (str): Nome do titular da conta.\n        saldo (float): Saldo atual da conta.\n        cpf (str): CPF do titular.\n        endereco (str): Endere\u00e7o do titular.\n        telefone (str): N\u00famero de telefone do titular.\n        agencia (str): N\u00famero da ag\u00eancia banc\u00e1ria.\n        numero_conta (str): N\u00famero da conta banc\u00e1ria.\n        tipo_conta (str): Tipo da conta (por exemplo, poupan\u00e7a ou corrente).\n        data_abertura (str): Data de abertura da conta.\n        ativa (bool): Indica se a conta est\u00e1 ativa ou n\u00e3o.\n    Methods:\n        __init__(titular, cpf, endereco, telefone, agencia, numero_conta, tipo_conta, saldo_inicial=0.0)\n            Inicializa uma nova conta banc\u00e1ria.\n        deposit(valor)\n            Deposita uma quantia na conta.\n        withdraw(valor)\n            Realiza um saque da conta.\n        get_balance()\n            Retorna o saldo atual da conta.\n    \"\"\"\ndef __init__(\nself,\ntitular,\ncpf,\nendereco,\ntelefone,\nagencia,\nnumero_conta,\ntipo_conta,\nsaldo_inicial=0.0,\n):\n\"\"\"\n        Inicializa uma nova conta banc\u00e1ria.\n        Args:\n            titular (str): Nome do titular da conta.\n            cpf (str): CPF do titular.\n            endereco (str): Endere\u00e7o do titular.\n            telefone (str): N\u00famero de telefone do titular.\n            agencia (str): N\u00famero da ag\u00eancia banc\u00e1ria.\n            numero_conta (str): N\u00famero da conta banc\u00e1ria.\n            tipo_conta (str): Tipo da conta (por exemplo, poupan\u00e7a ou corrente).\n            saldo_inicial (float, opcional): Saldo inicial da conta. Padr\u00e3o \u00e9 0.0.\n        \"\"\"\nself.titular = titular\nself.cpf = cpf\nself.endereco = endereco\nself.telefone = telefone\nself.agencia = agencia\nself.numero_conta = numero_conta\nself.tipo_conta = tipo_conta\nself.saldo = saldo_inicial\nself.data_abertura = \"XX/XX/XXXX\"  # Preencha com a data real de abertura\nself.ativa = True\ndef deposit(self, value):\n\"\"\"\n        Deposita uma quantia na conta.\n        Args:\n            value (float): Valor a ser depositado na conta.\n        Returns:\n            str: Mensagem indicando o sucesso ou falha da opera\u00e7\u00e3o.\n        \"\"\"\nif value &gt; 0:\nself.saldo += value\nreturn f\"Dep\u00f3sito de R${value:.2f} realizado com sucesso.\"\nelse:\nreturn \"O valor do dep\u00f3sito deve ser positivo.\"\ndef withdraw(self, value):\n\"\"\"\n        Realiza um saque da conta.\n        Args:\n            value (float): Valor a ser sacado da conta.\n        Returns:\n            str: Mensagem indicando o sucesso ou falha da opera\u00e7\u00e3o.\n        \"\"\"\nif 0 &lt; value &lt;= self.saldo:\nself.saldo -= value\nreturn f\"Saque de R${value:.2f} realizado com sucesso.\"\nelse:\nreturn \"Saldo insuficiente ou valor inv\u00e1lido de saque.\"\ndef get_balance(self):\n\"\"\"\n        Retorna o saldo atual da conta.\n        Returns:\n            str: Mensagem contendo o saldo atual da conta.\n        \"\"\"\nreturn f\"Saldo atual: R${self.saldo:.2f}\"\n</code></pre>"},{"location":"API/Conta/#project.conta.Conta.__init__","title":"<code>__init__(titular, cpf, endereco, telefone, agencia, numero_conta, tipo_conta, saldo_inicial=0.0)</code>","text":"<p>Inicializa uma nova conta banc\u00e1ria.</p> <p>Parameters:</p> Name Type Description Default <code>titular</code> <code>str</code> <p>Nome do titular da conta.</p> required <code>cpf</code> <code>str</code> <p>CPF do titular.</p> required <code>endereco</code> <code>str</code> <p>Endere\u00e7o do titular.</p> required <code>telefone</code> <code>str</code> <p>N\u00famero de telefone do titular.</p> required <code>agencia</code> <code>str</code> <p>N\u00famero da ag\u00eancia banc\u00e1ria.</p> required <code>numero_conta</code> <code>str</code> <p>N\u00famero da conta banc\u00e1ria.</p> required <code>tipo_conta</code> <code>str</code> <p>Tipo da conta (por exemplo, poupan\u00e7a ou corrente).</p> required <code>saldo_inicial</code> <code>(float, opcional)</code> <p>Saldo inicial da conta. Padr\u00e3o \u00e9 0.0.</p> <code>0.0</code> Source code in <code>project/conta.py</code> Python<pre><code>def __init__(\nself,\ntitular,\ncpf,\nendereco,\ntelefone,\nagencia,\nnumero_conta,\ntipo_conta,\nsaldo_inicial=0.0,\n):\n\"\"\"\n    Inicializa uma nova conta banc\u00e1ria.\n    Args:\n        titular (str): Nome do titular da conta.\n        cpf (str): CPF do titular.\n        endereco (str): Endere\u00e7o do titular.\n        telefone (str): N\u00famero de telefone do titular.\n        agencia (str): N\u00famero da ag\u00eancia banc\u00e1ria.\n        numero_conta (str): N\u00famero da conta banc\u00e1ria.\n        tipo_conta (str): Tipo da conta (por exemplo, poupan\u00e7a ou corrente).\n        saldo_inicial (float, opcional): Saldo inicial da conta. Padr\u00e3o \u00e9 0.0.\n    \"\"\"\nself.titular = titular\nself.cpf = cpf\nself.endereco = endereco\nself.telefone = telefone\nself.agencia = agencia\nself.numero_conta = numero_conta\nself.tipo_conta = tipo_conta\nself.saldo = saldo_inicial\nself.data_abertura = \"XX/XX/XXXX\"  # Preencha com a data real de abertura\nself.ativa = True\n</code></pre>"},{"location":"API/Conta/#project.conta.Conta.deposit","title":"<code>deposit(value)</code>","text":"<p>Deposita uma quantia na conta.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>float</code> <p>Valor a ser depositado na conta.</p> required <p>Returns:</p> Name Type Description <code>str</code> <p>Mensagem indicando o sucesso ou falha da opera\u00e7\u00e3o.</p> Source code in <code>project/conta.py</code> Python<pre><code>def deposit(self, value):\n\"\"\"\n    Deposita uma quantia na conta.\n    Args:\n        value (float): Valor a ser depositado na conta.\n    Returns:\n        str: Mensagem indicando o sucesso ou falha da opera\u00e7\u00e3o.\n    \"\"\"\nif value &gt; 0:\nself.saldo += value\nreturn f\"Dep\u00f3sito de R${value:.2f} realizado com sucesso.\"\nelse:\nreturn \"O valor do dep\u00f3sito deve ser positivo.\"\n</code></pre>"},{"location":"API/Conta/#project.conta.Conta.get_balance","title":"<code>get_balance()</code>","text":"<p>Retorna o saldo atual da conta.</p> <p>Returns:</p> Name Type Description <code>str</code> <p>Mensagem contendo o saldo atual da conta.</p> Source code in <code>project/conta.py</code> Python<pre><code>def get_balance(self):\n\"\"\"\n    Retorna o saldo atual da conta.\n    Returns:\n        str: Mensagem contendo o saldo atual da conta.\n    \"\"\"\nreturn f\"Saldo atual: R${self.saldo:.2f}\"\n</code></pre>"},{"location":"API/Conta/#project.conta.Conta.withdraw","title":"<code>withdraw(value)</code>","text":"<p>Realiza um saque da conta.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>float</code> <p>Valor a ser sacado da conta.</p> required <p>Returns:</p> Name Type Description <code>str</code> <p>Mensagem indicando o sucesso ou falha da opera\u00e7\u00e3o.</p> Source code in <code>project/conta.py</code> Python<pre><code>def withdraw(self, value):\n\"\"\"\n    Realiza um saque da conta.\n    Args:\n        value (float): Valor a ser sacado da conta.\n    Returns:\n        str: Mensagem indicando o sucesso ou falha da opera\u00e7\u00e3o.\n    \"\"\"\nif 0 &lt; value &lt;= self.saldo:\nself.saldo -= value\nreturn f\"Saque de R${value:.2f} realizado com sucesso.\"\nelse:\nreturn \"Saldo insuficiente ou valor inv\u00e1lido de saque.\"\n</code></pre>"},{"location":"markdown/funcionalidades/","title":"Funcionalidades","text":""},{"location":"markdown/funcionalidades/#botoes","title":"Bot\u00f5es","text":"<p> Markdown</p> <p> MkDocs</p> <p> MkDocks Material</p>"},{"location":"markdown/funcionalidades/#chamadas","title":"Chamadas","text":"Sintaxe Markdown<pre><code>bloco tipo \"T\u00edtulo\" posi\u00e7\u00e3o\n\nAqui voc\u00ea digita o conte\u00fado.\n</code></pre> Blocos Text Only<pre><code>!!!  Bloco Fixo  \n???  Bloco Inicia Suspenso  \n???+ Bloco Inicia Expandido  \n</code></pre> Tipos <ul> <li>note  </li> <li>abstract  </li> <li>info  </li> <li>tip  </li> <li>success  </li> <li>question  </li> <li>warning  </li> <li>failure  </li> <li>danger  </li> <li>bug  </li> <li>example  </li> <li>quote  </li> </ul> <p>Se voc\u00ea optar por n\u00e3o escrever um t\u00edtulo, retornar\u00e1 o nome da admonition escolhida.</p> Posi\u00e7\u00f5es <p>Info</p> <p>Voc\u00ea pode criar esses blocos no fim da linha usando <code>!!! info inline end</code>.</p> <p>Info</p> <p>Voc\u00ea pode criar esses blocos no in\u00edcio da linha usando <code>!!! info inline</code>.</p> Exemplos <p>Note</p> <p><code>!!! note</code></p> Abstract <p><code>???+ abstract</code></p> Info <p><code>??? info</code></p> Tip <p><code>??? tip</code></p> Success <p><code>??? success</code></p> Question <p><code>??? question</code></p> Warning <p><code>??? warning</code></p> Failure <p><code>??? failure</code></p> Danger <p><code>??? danger</code></p> Bug <p><code>??? danger</code></p> Example <p><code>??? danger</code></p> Quote <p><code>??? quote</code></p>"},{"location":"markdown/funcionalidades/#codigo","title":"C\u00f3digo","text":"Script de Exemplo<pre><code>SELECT\na.coluna1\nb.coluna2\nFROM tabela AS a\nLEFT JOIN dimension AS b\nON (a.coluna1 = b.coluna1)\nWHERE a.coluna1 IS NOT NULL\nGROUP BY 1\nORDER BY 2 DESC\n</code></pre>"},{"location":"markdown/funcionalidades/#diagramas","title":"Diagramas","text":""},{"location":"markdown/funcionalidades/#fluxos","title":"Fluxos","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre>"},{"location":"markdown/funcionalidades/#uml","title":"UML","text":"<pre><code>classDiagram\n  Person &lt;|-- Student\n  Person &lt;|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" &lt;-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()  \n  }</code></pre>"},{"location":"markdown/funcionalidades/#dica-de-ferramenta","title":"Dica de Ferramenta","text":"<p>O HTML \u00e9 mantido pela W3C.</p>"},{"location":"markdown/funcionalidades/#formatacao","title":"Formata\u00e7\u00e3o","text":""},{"location":"markdown/funcionalidades/#texto","title":"Texto","text":"<p>O texto pode ser deletado e substitu\u00eddo por adicionado. Isso pode ser feito de forma combinada umasimples opera\u00e7\u00e3o. Highlighting tamb\u00e9m \u00e9 poss\u00edvel e coment\u00e1rios podem ser adicionados.</p> <p>A formata\u00e7\u00e3o tamb\u00e9m pode ser aplicada aos blocos, colocando a abertura e o fechamento tags em linhas separadas e adicionando novas linhas entre as tags e o conte\u00fado.</p>"},{"location":"markdown/funcionalidades/#palavras","title":"Palavras","text":"<ul> <li>Coment\u00e1rio</li> <li>Adicionado</li> <li>Marcado</li> <li>Inserido</li> <li>Deletado</li> </ul>"},{"location":"markdown/funcionalidades/#cientifico","title":"Cient\u00edfico","text":"<ul> <li>H<sub>2</sub>O</li> <li>A<sup>T</sup>A</li> </ul>"},{"location":"markdown/funcionalidades/#atalhos-de-teclado","title":"Atalhos de Teclado","text":"<p>Ctrl+Alt+Del</p>"},{"location":"markdown/funcionalidades/#icones-e-emojis","title":"\u00cdcones e Emojis","text":""},{"location":"markdown/funcionalidades/#imagens","title":"Imagens","text":""},{"location":"markdown/funcionalidades/#listas","title":"Listas","text":"<p> Lista Desordenada</p> <ul> <li> <p>T\u00edtulo 01</p> <ul> <li>Item 01</li> <li>Item 02</li> <li>Item 03</li> </ul> </li> </ul> <p> Lista Ordenada</p> <ol> <li> <p>T\u00edtulo</p> <ol> <li>Item</li> <li>Item<ol> <li>Sub Item</li> <li>Sub Item</li> <li>Sub Item</li> </ol> </li> </ol> </li> </ol> <p> Lista de Defini\u00e7\u00e3o</p> <code>Categoria</code> <p>Descri\u00e7\u00e3o Completa da Categoria.</p> <code>Caracter\u00edsticas</code> <p>Descri\u00e7\u00e3o Completa das Caracter\u00edsticas.</p> <p> Lista de Tarefas</p> <ul> <li> Configurar o MkDocs Material</li> <li> Finalizar Documenta\u00e7\u00e3o</li> <li> Apresentar<ul> <li> Para o Time de Analytics</li> <li> Para o Grupo de Estudos</li> </ul> </li> </ul>"},{"location":"markdown/funcionalidades/#notas-de-rodape","title":"Notas de Rodap\u00e9","text":"<p>Voc\u00ea pode usar as Notas de Rodap\u00e9<sup>1</sup> para fazer cita\u00e7\u00f5es<sup>2</sup>.</p>"},{"location":"markdown/funcionalidades/#mathjax","title":"MathJax","text":"\\[ \\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}} \\] <p>O homomorfismo \\(f\\) \u00e9 injetivo se e somente se seu kernel \u00e9 apenas o  singleton conjunto \\(e_G\\), porque de outra forma \\(\\exists a,b\\in G\\) com \\(a\\neq b\\) de tal forma que  \\(f(a)=f(b)\\).</p>"},{"location":"markdown/funcionalidades/#tabelas","title":"Tabelas","text":"M\u00e9todos Descri\u00e7\u00e3o <code>GET</code> Recebe <code>PUT</code> Insere <code>DELETE</code> Apaga <ol> <li> <p>As notas de rodap\u00e9 podem ajudar bastante nas documenta\u00e7\u00f5es.\u00a0\u21a9</p> </li> <li> <p>Voc\u00ea pode citar da forma como achar conveniente.\u00a0\u21a9</p> </li> </ol>"},{"location":"markdown/log/","title":"Changelog","text":"<p>Essa p\u00e1gina ser\u00e1 usada para informar todas as altera\u00e7\u00f5es hist\u00f3ricas que forem feitas no template de documenta\u00e7\u00e3o.</p>"},{"location":"markdown/settings/","title":"Settings","text":"<p>Essa p\u00e1gina ir\u00e1 mostrar todas as configura\u00e7\u00f5es aplicadas no <code>mkdocs.yaml</code>. Isso deixar\u00e1 mais simples o entendimento de cada coisa que foi feita e vai dar a possibilidade de fazer altera\u00e7\u00f5es r\u00e1pidas.</p>"},{"location":"markdown/settings/#yaml","title":"Yaml","text":""},{"location":"markdown/settings/#html","title":"Html","text":""},{"location":"markdown/settings/#css","title":"Css","text":""},{"location":"markdown/settings/#javascript","title":"Javascript","text":""}]}